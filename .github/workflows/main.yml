name: Build and Package EECT

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build-type:
        description: 'Build type (Release/Debug)'
        required: false
        default: 'Release'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Nuitka Dependency Walker
      uses: actions/cache@v4
      with:
        path: C:\Users\runneradmin\AppData\Local\Nuitka\Nuitka\Cache\downloads\depends\x86_64
        key: ${{ runner.os }}-nuitka-depends-cache-v1
        restore-keys: |
          ${{ runner.os }}-nuitka-depends-cache-
      env:
        NUITKA_DOWNLOAD_DEPENDS: "yes"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Add config and img directories
      run: |
        mkdir config img

    - name: Build with Nuitka
      uses: Nuitka/Nuitka-Action@v1.2
      with:
        script-name: main.py
        output-file: EECT
        onefile: true
        standalone: true
        windows-icon-from-ico: EECT_icon.ico
        output-dir: dist
        include-data-dir: |
          img=img
          config=config
        enable-plugins: tk-inter
        disable-console: true

    - name: Zip the build artifact
      run: |
        cd dist
        powershell Compress-Archive -Path EECT.exe, config, img -DestinationPath EECT_build.zip

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: eect-build
        path: dist\EECT_build.zip
