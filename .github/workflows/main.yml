name: Build and Package EECT

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build-type:
        description: 'Build type (Release/Debug)'
        required: false
        default: 'Release'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Nuitka Dependency Walker
      uses: actions/cache@v4
      with:
        path: C:\Users\runneradmin\AppData\Local\Nuitka\Nuitka\Cache\downloads\depends\x86_64
        key: ${{ runner.os }}-nuitka-depends-cache-v1
        restore-keys: |
          ${{ runner.os }}-nuitka-depends-cache-
      env:
        NUITKA_DOWNLOAD_DEPENDS: "yes"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests maliang psutil nuitka imageio

    - name: Build with Nuitka
      run: |
        python -m nuitka `
          --standalone `
          --onefile `
          --windows-icon-from-ico=EECT_icon.ico `
          --output-dir=dist `
          --enable-plugin=tk-inter `
          --windows-console-mode=disable `
          --follow-imports `
          main.py

    - name: Compress build output
      run: |
        Compress-Archive -Path dist -DestinationPath eect-build.zip

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: eect-build-zip
        path: eect-build.zip
